import time
import re
import json
import os
import requests
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.common.exceptions import TimeoutException, NoSuchElementException
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

# ---------------- CONFIG ---------------- #
from config import course_url, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID
# course_url = "https://learningportal.ocsc.go.th"
cookies_file = "cookies.json"

# р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓ Telegram Bot
# TELEGRAM_BOT_TOKEN = "YOUR_BOT_TOKEN"
# TELEGRAM_CHAT_ID = "YOUR_CHAT_ID"

# ---------------- SETUP ---------------- #
options = webdriver.ChromeOptions()
# options.add_argument('--headless')  # р╕Цр╣Йр╕▓р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕гр╕▒р╕Щр╣Бр╕Ър╕Ър╣Др╕бр╣Ир╣Ар╕Ыр╕┤р╕Фр╕лр╕Щр╣Йр╕▓р╕Хр╣Ир╕▓р╕З
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')
options.add_argument("--log-level=3")   # 0=INFO, 1=WARNING, 2=ERROR, 3=FATAL


driver = webdriver.Chrome(options=options)
wait = WebDriverWait(driver, 20)

# ---------------- FUNCTIONS ---------------- #
def send_telegram_message(text: str):
    try:
        requests.post(
            f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage",
            data={"chat_id": TELEGRAM_CHAT_ID, "text": text},
            timeout=10
        )
    except Exception as e:
        print(f"р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б Telegram: {e}")

def send_telegram_photo(driver, caption=""):
    screenshot_path = "screenshot.png"
    driver.save_screenshot(screenshot_path)
    try:
        with open(screenshot_path, "rb") as f:
            requests.post(
                f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendPhoto",
                data={"chat_id": TELEGRAM_CHAT_ID, "caption": caption},
                files={"photo": f},
                timeout=20
            )
        print(">>> р╕кр╣Ир╕З screenshot р╣Др╕Ы Telegram р╣Бр╕ер╣Йр╕з")
    except Exception as e:
        print(f"р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╣Ир╕З screenshot Telegram: {e}")

def save_cookies(driver, path):
    with open(path, "w", encoding="utf-8") as f:
        json.dump(driver.get_cookies(), f, ensure_ascii=False, indent=2)
    print(f"тЬЕ р╕Ър╕▒р╕Щр╕Чр╕╢р╕Б cookies р╕ер╕Зр╣Др╕Яр╕ер╣М {path} р╣Бр╕ер╣Йр╕з")

def load_cookies(driver, path, url):
    if not os.path.exists(path):
        return False
    driver.get(url)
    with open(path, "r", encoding="utf-8") as f:
        cookies = json.load(f)
        for cookie in cookies:
            cookie.pop("sameSite", None)
            try:
                driver.add_cookie(cookie)
            except Exception as e:
                print(f"р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Юр╕┤р╣Ир╕б cookie: {cookie.get('name')} тЖТ {e}")
    print(f"тЬЕ р╣Вр╕лр╕ер╕Ф cookies р╕Ир╕▓р╕Б {path} р╣Бр╕ер╣Йр╕з")
    return True

def is_logged_in(driver):
    return "login" not in driver.current_url.lower() and "challenge" not in driver.current_url.lower()

def force_relogin(driver):
    driver.get(course_url)
    send_telegram_message("тЪая╕П Session р╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕ тЖТ р╕Бр╕гр╕╕р╕Ур╕▓ login/р╕кр╣Бр╕Бр╕Щ QR/р╕Бр╕Ф Verify р╣Гр╕лр╕бр╣И")
    send_telegram_photo(driver, caption="ЁЯУ╕ р╕лр╕Щр╣Йр╕▓р╕Ир╕н Login/Verify (Session р╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕)")
    print("тЪая╕П Session р╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕ тЖТ р╕Бр╕гр╕╕р╕Ур╕▓ login/р╕кр╣Бр╕Бр╕Щ QR/р╕Бр╕Ф Verify р╣Гр╕лр╕бр╣И")
    time.sleep(30)
    if is_logged_in(driver):
        save_cookies(driver, cookies_file)
        send_telegram_message("тЬЕ Login р╣Гр╕лр╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И р╣Бр╕ер╕░ cookies р╕Цр╕╣р╕Бр╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╣Бр╕ер╣Йр╕з")
        send_telegram_photo(driver, caption="ЁЯУ╕ Dashboard р╕лр╕ер╕▒р╕З Login р╣Гр╕лр╕бр╣И")
        return True
    else:
        send_telegram_message("тЭМ Login р╣Гр╕лр╕бр╣Ир╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И")
        send_telegram_photo(driver, caption="ЁЯУ╕ р╕лр╕Щр╣Йр╕▓р╕Ир╕н Login (Login р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И)")
        return False

def ensure_session(driver):
    if not is_logged_in(driver):
        return force_relogin(driver)
    return True

# ---------------- LOGIN ---------------- #
logged_in = False
if load_cookies(driver, cookies_file, course_url):
    driver.get(course_url)
    time.sleep(5)
    if is_logged_in(driver):
        logged_in = True
        send_telegram_message("тЬЕ р╣Гр╕Кр╣Й cookies р╣Ар╕Фр╕┤р╕б login р╕кр╕│р╣Ар╕гр╣Зр╕И")
        send_telegram_photo(driver, caption="ЁЯУ╕ Dashboard (cookies р╣Ар╕Фр╕┤р╕б)")
    else:
        os.remove(cookies_file)
        if not force_relogin(driver):
            driver.quit()
            exit()
else:
    driver.get(course_url)
    print("тЪая╕П р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡ cookies тЖТ р╕Бр╕гр╕╕р╕Ур╕▓ login/р╕кр╣Бр╕Бр╕Щ QR/р╕Бр╕Ф Verify р╕Фр╣Йр╕зр╕вр╕Хр╕▒р╕зр╣Ар╕нр╕З")
    time.sleep(60)
    if is_logged_in(driver):
        save_cookies(driver, cookies_file)
        time.sleep(5)
        driver.get(course_url)
    else:
        driver.quit()
        exit()

# ---------------- MAIN LOOP ---------------- #
lesson_links = wait.until(
    EC.presence_of_all_elements_located(
        (By.XPATH, '//a[.//span[starts-with(normalize-space(.), "р╕Ър╕Чр╕Чр╕╡р╣И")]]')
    )
)
print(f"р╕Юр╕Ър╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф {len(lesson_links)} р╕Ър╕Чр╣Ар╕гр╕╡р╕вр╕Щ")

for idx, element in enumerate(lesson_links, start=1):
    if not ensure_session(driver):
        break

    tobic = element.text.strip()
    print(f"{idx}: {tobic} {element.get_attribute('href')} ")
    
    if not tobic.startswith("р╕Ър╕Чр╕Чр╕╡р╣И"):
        continue
    if "р╣Бр╕Ър╕Ър╕Ыр╕гр╕░р╣Ар╕бр╕┤р╕Щ" in tobic:
        send_telegram_message("ЁЯУШ р╕Юр╕Ъ 'р╣Бр╕Ър╕Ър╕Ыр╕гр╕░р╣Ар╕бр╕┤р╕Щ' тЖТ р╕Ир╕Ър╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕б")
        break

    element.click()
    time.sleep(2)

    wait_text = "р╕Др╕╕р╕Ур╕кр╕░р╕кр╕бр╣Ар╕зр╕ер╕▓р╣Ар╕гр╕╡р╕вр╕Щр╣Гр╕Щр╕лр╕▒р╕зр╕Вр╣Йр╕нр╕Щр╕╡р╣Йр╕Др╕гр╕Ър╕Хр╕▓р╕бр╕Чр╕╡р╣Ир╕Бр╕│р╕лр╕Щр╕Фр╣Бр╕ер╣Йр╕з"
    xpath_st = '//*[@id="root"]/div[3]/div/div[3]/div'
    send_telegram_message(f"тЦ╢я╕П р╣Ар╕гр╕┤р╣Ир╕бр╣Ар╕гр╕╡р╕вр╕Щр╕Ър╕Чр╣Ар╕гр╕╡р╕вр╕Щ: {tobic}")
    while True:
        if not ensure_session(driver):
            break

        try:
            element_st = driver.find_element(By.XPATH, xpath_st).text.strip()
        except NoSuchElementException:
            element_st = ""

        if element_st == wait_text:
            print(f"тЬЕ Completed topic: {tobic}")
            # send_telegram_message(f"тЬЕ р╣Ар╕гр╕╡р╕вр╕Щр╕Ир╕Ър╕Ър╕Чр╣Ар╕гр╕╡р╕вр╕Щ: {tobic}")
            break
        else:
            print("тП│ р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕Др╕гр╕Ър╣Ар╕зр╕ер╕▓ тЖТ р╕гр╕нр╕нр╕╡р╕Б 1 р╕Щр╕▓р╕Чр╕╡ ...")
            time.sleep(63)

print('>>> End program')
send_telegram_message("ЁЯПБ р╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕бр╕Чр╕│р╕Зр╕▓р╕Щр╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щр╣Бр╕ер╣Йр╕з")
send_telegram_photo(driver, caption="ЁЯУ╕ р╕лр╕Щр╣Йр╕▓р╕Ир╕нр╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕вр╕Бр╣Ир╕нр╕Щр╕Ыр╕┤р╕Фр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕б")
driver.quit()